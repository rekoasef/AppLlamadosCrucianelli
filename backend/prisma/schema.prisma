// backend/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CallRecord {
  id                  String         @id @default(cuid())
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  contactName         String
  machineSerialNumber String?
  observations        String?        
  status              CallStatus     @default(OPEN)
  specificData        Json?

  businessUnit     BusinessUnit   @relation(fields: [businessUnitId], references: [id])
  businessUnitId   String
  handledBy        User?          @relation("HandledBy", fields: [handledById], references: [id])
  handledById      String?
  createdByUser    User           @relation("CreatedBy", fields: [createdById], references: [id])
  createdById      String
  callerType       CallerType     @relation(fields: [callerTypeId], references: [id])
  callerTypeId     String
  machineType      MachineType?   @relation(fields: [machineTypeId], references: [id])
  machineTypeId    String?
  billedClient     String?
  dealership       Dealership?    @relation(fields: [dealershipId], references: [id])
  dealershipId     String?
  inquiryArea      InquiryArea    @relation(fields: [inquiryAreaId], references: [id])
  inquiryAreaId    String
  responseReason   ResponseReason? @relation(fields: [responseReasonId], references: [id])
  responseReasonId String?
  contactChannel   ContactChannel @relation(fields: [contactChannelId], references: [id])
  contactChannelId String
  durationRange    DurationRange  @relation(fields: [durationRangeId], references: [id])
  durationRangeId  String
  urgencyLevel     UrgencyLevel   @relation(fields: [urgencyLevelId], references: [id])
  urgencyLevelId   String
}

model BusinessUnit {
  id   String @id @default(cuid())
  name String @unique

  callRecords       CallRecord[]
  // --- RELACIONES AÑADIDAS ---
  callerTypes       CallerType[]      @relation("BusinessUnitCallerTypes")
  machineTypes      MachineType[]     @relation("BusinessUnitMachineTypes")
  dealerships       Dealership[]      @relation("BusinessUnitDealerships")
  inquiryAreas      InquiryArea[]     @relation("BusinessUnitInquiryAreas")
  responseReasons   ResponseReason[]  @relation("BusinessUnitResponseReasons")
  contactChannels   ContactChannel[]  @relation("BusinessUnitContactChannels")
  durationRanges    DurationRange[]   @relation("BusinessUnitDurationRanges")
  urgencyLevels     UrgencyLevel[]    @relation("BusinessUnitUrgencyLevels")
  leafProductTypes  LeafProductType[] @relation("BusinessUnitLeafProductTypes")
  // complaintLocations no necesita relacionarse con BusinessUnit directamente si no es necesario
  fertecMachineTypes FertecMachineType[] @relation("BusinessUnitFertecMachineTypes")
}

model User {
  id           String       @id @default(cuid())
  email        String       @unique
  name         String
  password     String
  role         UserRole     @default(USER)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  handledCalls CallRecord[] @relation("HandledBy")
  createdCalls CallRecord[] @relation("CreatedBy")
}

// --- MODELOS DE CATÁLOGO CORREGIDOS ---

model CallerType {
  id            String         @id @default(cuid())
  name          String         @unique
  records       CallRecord[]
  businessUnits BusinessUnit[] @relation("BusinessUnitCallerTypes") // <-- RELACIÓN AÑADIDA
}

model MachineType {
  id            String         @id @default(cuid())
  name          String         @unique
  records       CallRecord[]
  businessUnits BusinessUnit[] @relation("BusinessUnitMachineTypes") // <-- RELACIÓN AÑADIDA
}

model Dealership {
  id            String         @id @default(cuid())
  name          String         @unique
  records       CallRecord[]
  businessUnits BusinessUnit[] @relation("BusinessUnitDealerships") // <-- RELACIÓN AÑADIDA
}

model InquiryArea {
  id            String         @id @default(cuid())
  name          String         @unique
  records       CallRecord[]
  businessUnits BusinessUnit[] @relation("BusinessUnitInquiryAreas") // <-- RELACIÓN AÑADIDA
}

model ResponseReason {
  id            String         @id @default(cuid())
  name          String         @unique
  records       CallRecord[]
  businessUnits BusinessUnit[] @relation("BusinessUnitResponseReasons") // <-- RELACIÓN AÑADIDA
}

model ContactChannel {
  id            String         @id @default(cuid())
  name          String         @unique
  records       CallRecord[]
  businessUnits BusinessUnit[] @relation("BusinessUnitContactChannels") // <-- RELACIÓN AÑADIDA
}

model DurationRange {
  id            String         @id @default(cuid())
  name          String         @unique
  records       CallRecord[]
  businessUnits BusinessUnit[] @relation("BusinessUnitDurationRanges") // <-- RELACIÓN AÑADIDA
}

model UrgencyLevel {
  id            String         @id @default(cuid())
  name          String         @unique
  records       CallRecord[]
  businessUnits BusinessUnit[] @relation("BusinessUnitUrgencyLevels") // <-- RELACIÓN AÑADIDA
}

model LeafProductType {
  id            String         @id @default(cuid())
  name          String         @unique
  businessUnits BusinessUnit[] @relation("BusinessUnitLeafProductTypes") // <-- RELACIÓN AÑADIDA
}

model ComplaintLocation { // Este modelo no parece necesitar relación directa, lo dejamos como estaba
  id   String @id @default(cuid())
  name String @unique
}

model FertecMachineType {
  id            String         @id @default(cuid())
  name          String         @unique
  businessUnits BusinessUnit[] @relation("BusinessUnitFertecMachineTypes") // <-- RELACIÓN AÑADIDA
}

enum UserRole {
  ADMIN
  USER
}

enum CallStatus {
  OPEN
  IN_PROGRESS
  CLOSED
  PENDING_CLIENT
}